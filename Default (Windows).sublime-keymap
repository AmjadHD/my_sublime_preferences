[
{
    "keys": ["ctrl+v"],
    "command": "paste_and_indent"
},
{
    "keys": ["ctrl+shift+v"],
    "command": "paste"
},
{
    "keys": ["ctrl+k", "ctrl+r"],
    "command": "revert"
},
{
    "keys": ["alt+delete"],
    "command": "delete_word",
    "args": {"forward": true, "sub_words": true},
},
{
    "keys": ["ctrl+."],
    "command": "next_modification"
},
{
    "keys": ["ctrl+alt+t"],
    "command": "fm_open_terminal"
},
{
    "keys": ["ctrl+shift+t"],
    "command": "reopen_last_file"
},
{
    "keys": ["ctrl+shift+o"],
    "command": "prompt_open_folder"
},
{
    "keys": ["ctrl+k", "ctrl+t"],
    "command": "title_case"
},
{
    "keys": ["ctrl+k", "ctrl+l"],
    "command": "lower_case"
},
{
    "keys": ["ctrl+k", "ctrl+u"],
    "command": "upper_case"
},
{
    "keys": ["f5"],
    "command": "show_overlay",
    "args":
    {
        "overlay": "command_palette",
        "text": "Package Control: "
    }
},
{
    "keys": ["ctrl+alt+p"],
    "command": "show_overlay",
    "args":
    {
        "overlay": "command_palette",
        "text": "Project: "
    }
},
{
    "keys": ["ctrl+k", "ctrl+z"],
    "command": "revert_modification"
},
{
    "keys": ["ctrl+k", "ctrl+p"],
    "command": "expand_selection_to_paragraph",
},
{
    "keys": ["ctrl+k", "ctrl+i"],
    "command": "expand_selection",
    "args": {"to": "indentation"}
},

// User
{
    "keys": ["ctrl+k", "ctrl+shift+d"],
    "command": "toggle_all_diffs"
},
{
    "keys": ["ctrl+alt+z"],
    "command": "toggle_zoom_pane",
    "args":
    {
        "fraction": 0.9
    }
},
// Color Helper
{
    "keys": ["ctrl+shift+i"],
    "command": "color_helper",
    "args": {"mode": "info"},
},
// Bracket Highlighter
{
    "keys": ["alt+x"],
    "command": "bh_remove_brackets"
},
{
    "keys": ["alt+s"],
    "command": "swap_brackets"
},
{
    "keys": ["ctrl+alt+q"],
    "command": "bh_key",
    "args":
    {
        "lines" : true,
        "plugin":
        {
            "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
            "command": "bh_modules.swapquotes"
        }
    }
},
{
    "keys": ["alt+d"],
    "command": "bh_key",
    "args":
    {
        "lines" : true,
        "no_outside_adj": null,
        "plugin":
        {
            "type": ["__all__"],
            "command": "bh_modules.bracketselect"
        }
    }
},

// Override Audit
{
    "keys": ["alt+r"],
    "command": "override_audit_refresh_report",
    "context": [
        {"key": "selector", "operand": "text.override-audit.pkgreport"}
    ],
},
{
    "keys": ["shift+f5"],
    "command": "override_audit_create_override",
    "args": {"include_existing": true}
},

{ "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
    [
        { "key": "setting.auto_indent" },
        { "key": "selection_empty", "match_all": true },
        { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
    ]
},

{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"},
    "context":
    [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
        { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
        { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
    ]
},
{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
    [
        { "key": "setting.auto_match_enabled" },
        { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
},

// LSP
{
    "command": "lsp_format_document",
    "keys": ["ctrl+alt+f"],
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "documentFormattingProvider | documentRangeFormattingProvider"
        }
    ]
},
{
    "command": "lsp_symbol_references",
    "keys": ["ctrl+shift+f10"],
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "referencesProvider"
        },
    ]
},
// Go To Definition
{
    "command": "lsp_symbol_definition",
    "args": {"side_by_side": false},
    "keys": ["f10"],
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "definitionProvider"
        },
    ]
},
// Go To Definition (side by side)
{
    "command": "lsp_symbol_definition",
    "args": {"side_by_side": true},
    "keys": ["ctrl+f10"],
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "definitionProvider"
        },
    ]
},
{
    "keys": ["alt+r"],
    "command": "lsp_document_symbols",
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "documentSymbolProvider"
        },
    ]
},
{
    "command": "lsp_workspace_symbols",
    "keys": [
        "alt+shift+r"
    ],
    "context": [
        {
            "key": "lsp.session_with_capability",
            "operand": "workspaceSymbolProvider"
        }
    ]
},

// Settings
{
    "keys": ["ctrl+f8"],
    "command": "edit_settings",
    "args":
    {
        "base_file": "${packages}/Default/Preferences.sublime-settings",
        "default": "// Settings in here override those in \"Default/Preferences.sublime-settings\",\n// and are overridden in turn by syntax-specific settings.\n{\n\t$0\n}\n"
    }
},
{
    "keys": ["shift+f8"],
    "command": "edit_settings",
    "args":
    {
        "base_file": "${packages}/Default/Default ($platform).sublime-keymap",
        "default": "[\n\t$0\n]\n"
    }
},
{
    "keys": ["ctrl+shift+up"],
    "command": "chain",
    "args":
    {
        "commands": [
            {"command": "swap_line_up"},
            {"command": "reindent", "args": {"single_line": true}}
        ]
    }
},
{
    "keys": ["ctrl+shift+down"],
    "command": "chain",
    "args":
    {
        "commands": [
            {"command": "swap_line_down"},
            {"command": "reindent", "args": {"single_line": true}},
        ]
    }
},
{
    "keys": ["alt+w"],
    "command": "prompt_select_workspace",
    "context": [{"key": "panel_has_focus", "operator": "equal", "operand": false}]
},

// terminus
{
    "keys": ["escape"],
    "command": "hide_panel",
    "context": [
        { "key": "terminus_view" }
    ]
},
{
    "keys": ["ctrl+t"],
    "command": "toggle_terminus_panel"
},
{
    "keys": ["ctrl+w"],
    "command": "terminus_close",
    "context":
    [
        { "key": "terminus_view" }
    ]
}
]
